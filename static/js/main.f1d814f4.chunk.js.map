{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","console","log","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","action","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1d814f4.chunk.js","sourcesContent":["import firebase from \"firebase/compat\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env[\"REACT_APP_API_KEY\"],\r\n    authDomain: process.env[\"REACT_APP_AUTH_DOMAIN\"],\r\n    projectId: process.env[\"REACT_APP_PROJECT_ID\"],\r\n    storageBucket: process.env[\"REACT_APP_STORAGE_BUCKET\"],\r\n    messagingSenderId: process.env[\"REACT_APP_MESSAGING_SENDER_ID\"],\r\n    appId: process.env[\"REACT_APP_APP_ID\"]\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()","import {authService} from \"fbase\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value},\r\n        } = event\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className={\"container\"}>\r\n                <input\r\n                    name={\"email\"}\r\n                    type=\"email\"\r\n                    placeholder={\"Email\"}\r\n                    required={true}\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className={\"authInput\"}\r\n                />\r\n                <input\r\n                    name={\"password\"}\r\n                    type=\"password\"\r\n                    placeholder={\"Password\"}\r\n                    required={true}\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className={\"authInput\"}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    className={\"authInput authSubmit\"}\r\n                />\r\n                {error && <span className={\"authError\"}>{error}</span> }\r\n            </form>\r\n            <span onClick={toggleAccount} className={\"authSwitch\"}>\r\n                {newAccount ? \"Sign In\" : \"CreateAccount\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import {authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter, faGoogle, faGithub\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        await authService.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div className={\"authContainer\"}>\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size={\"3x\"}\r\n                style={{marginBottom: 30}}\r\n                />\r\n            <AuthForm/>\r\n            <div className={\"authBtns\"}>\r\n                <button onClick={onSocialClick} name={\"google\"} className={\"authBtn\"}>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name={\"github\"} className={\"authBtn\"}>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import {dbService, storageService} from \"fbase\";\r\nimport {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            if (nweetObj.attachmentUrl !== '')\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\r\n        setEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div className={\"nweet\"}>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className={\"container nweetEdit\"}>\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder={\"Edit your nweet\"}\r\n                            autoFocus={true}\r\n                            className={\"formInput\"}\r\n                        />\r\n                        <input type=\"submit\" value={\"Update Nweet\"} className={\"formBtn\"}/>\r\n                    </form>\r\n                    <button onClick={toggleEditing} className={\"formBtn cancelBtn\"}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} alt=\"\" width={\"50px\"} height={\"50px\"}/>\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className={\"nweet__actions\"}>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash}/>\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt}/>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import {dbService, storageService} from \"fbase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState('')\r\n    const [attachment, setAttachment] = useState('')\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (nweet === '') {\r\n            return\r\n        }\r\n        let attachmentUrl = ''\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, 'data_url')\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n            console.log(attachmentUrl)\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        })\r\n        setNweet('')\r\n        setAttachment('')\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault()\r\n        console.log(event)\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile)\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment('')\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={\"factoryForm\"}>\r\n            <div className={\"factoryInput__container\"}>\r\n                <input\r\n                    className={\"factoryInput__input\"}\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type={\"text\"}\r\n                    placeholder={\"What's on your mind?\"}\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value={\"&rarr;\"} className={\"factoryInput__arrow\"}/>\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className={\"factoryInput__label\"}>\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n            <input\r\n                id={\"attach-file\"}\r\n                type={\"file\"}\r\n                accept={\"image/*\"}\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className={\"factoryForm__attachment\"}>\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className={\"factoryForm__clear\"} onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import {dbService} from \"fbase\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }))\r\n            setNweets(newArray)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{marginTop: 30}}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import {authService} from \"fbase\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory()\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push('/')\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName: newDisplayName})\r\n            refreshUser()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <form action=\"\" onSubmit={onSubmit} className={\"profileForm\"}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder={\"Dispaly name\"}\r\n                    value={newDisplayName}\r\n                    autoFocus={true}\r\n                    className={\"formInput\"}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={\"Update Profile\"}\r\n                    className={\"formBtn\"}\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className={\"formBtn cancelBtn logOut\"} onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to={\"/\"} style={{marginRight: 10}}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"04AAFF\"} size={\"2x\"}/>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to={\"/profile\"}\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"04AAFF\"} size={\"2x\"}/>\r\n                        <span style={{marginTop: 10}}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path={\"/profile\"}>\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import AppRouter from \"components/Router\";\nimport {useState, useEffect} from \"react\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false)\n    const [userObj, setUserObj] = useState(null)\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                })\n            } else {\n                setUserObj(false)\n            }\n            setInit(true)\n        })\n    }, [])\n\n    const refreshUser = () => {\n        const user = authService.currentUser\n        setUserObj({\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args) => user.updateProfile(args),\n        })\n    }\n\n    return (\n        <>\n            {init ? (<AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"initializing...\"\n            )}\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}