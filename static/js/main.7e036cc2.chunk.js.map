{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","alt","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","console","log","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","action","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e036cc2.chunk.js","sourcesContent":["import firebase from \"firebase/compat\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env[\"REACT_APP_API_KEY\"],\r\n    authDomain: process.env[\"REACT_APP_AUTH_DOMAIN\"],\r\n    projectId: process.env[\"REACT_APP_PROJECT_ID\"],\r\n    storageBucket: process.env[\"REACT_APP_STORAGE_BUCKET\"],\r\n    messagingSenderId: process.env[\"REACT_APP_MESSAGING_SENDER_ID\"],\r\n    appId: process.env[\"REACT_APP_APP_ID\"]\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()","import {authService} from \"fbase\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value},\r\n        } = event\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            let data\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name={\"email\"}\r\n                    type=\"email\"\r\n                    placeholder={\"Email\"}\r\n                    required={true}\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name={\"password\"}\r\n                    type=\"password\"\r\n                    placeholder={\"Password\"}\r\n                    required={true}\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"CreateAccount\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import {authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        const data = await authService.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm/>\r\n            <div>\r\n                <button onClick={onSocialClick} name={\"google\"}>Continue with Google</button>\r\n                <button onClick={onSocialClick} name={\"github\"}>Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import {dbService, storageService} from \"fbase\";\r\nimport {useState} from \"react\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            if (nweetObj.attachmentUrl !== '')\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\r\n        setEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required/>\r\n                        <input type=\"submit\" value={\"Update Nweet\"}/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} alt=\"\" width={\"50px\"} height={\"50px\"}/>\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import {dbService, storageService} from \"fbase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {useState} from \"react\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState('')\r\n    const [attachment, setAttachment] = useState('')\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        let attachmentUrl = ''\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, 'data_url')\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n            console.log(attachmentUrl)\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        })\r\n        setNweet('')\r\n        setAttachment('')\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault()\r\n        console.log(event)\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event\r\n        const theFile = files[0]\r\n        const reader = new FileReader()\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile)\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment('')\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type={\"text\"}\r\n                placeholder={\"What's on your mind?\"}\r\n                maxLength={120}\r\n            />\r\n            <input type={\"file\"} accept={\"image/*\"} onChange={onFileChange}/>\r\n            <input type=\"submit\" value={\"Nweet\"}/>\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width={'50px'} height={'50px'}/>\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import {dbService} from \"fbase\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }))\r\n            setNweets(newArray)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import {authService, dbService} from \"fbase\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory()\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push('/')\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName: newDisplayName})\r\n            refreshUser()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form action=\"\" onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder={\"Dispaly name\"}\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value={\"Update Profile\"}/>\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to={\"/\"}>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={\"/profile\"}>{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path={\"/profile\"}>\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import AppRouter from \"components/Router\";\nimport {useState, useEffect} from \"react\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false)\n    const [userObj, setUserObj] = useState(null)\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                })\n            } else {\n                setUserObj(false)\n            }\n            setInit(true)\n        })\n    }, [])\n\n    const refreshUser = () => {\n        const user = authService.currentUser\n        setUserObj({\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args) => user.updateProfile(args),\n        })\n    }\n\n    return (\n        <>\n            {init ? (<AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"initializing...\"\n            )}\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}